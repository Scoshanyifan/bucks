Confiuration:
  # 用来指定log4j本身的打印日志的级别，8个级别：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
  status: warn

  # 定义全局变量
  Properties:
    Property:
    # 控制台输出级别
    - name: LOG.LEVEL.CONSOLE
      value: info
    # 日志存储位置
    - name: LOG_PATH
      value: D:/kunbu/bucks/log/app
    - name: LOG_ERROR_PATH
      value: D:/kunbu/bucks/log/error
    # 日志格式
    - name: LOG.PATTERN
      value: "%d{yyyy-MM-dd HH:mm:ss SSS} %-5p [%t]  %c{1}: %L : %m%n"

  # 日志管道（保存在哪）
  Appenders:
    # 输出到控制台
    Console:
      name: CONSOLE
      target: SYSTEM_OUT
      PatternLayout:
        pattern: ${LOG.PATTERN}
    # 输出到文件
    RollingFile:

    # 普通日志
    - name: ROLLING_FILE
      # 文件名
      fileName: ${LOG_PATH}/app.log
      # 文件格式
#      filePattern: "${LOG_PATH}/farm-%d{yyyy-MM-dd}-%i.log"
      filePattern: "${LOG_PATH}/farm-%d{yyyy-MM-dd-HH-mm}-%i.log"
      PatternLayout:
        pattern: ${LOG.PATTERN}
      Policies:
        # 按时间保存
        TimeBasedTriggeringPolicy:
          modulate: true
          # 此处代表 1天，因为pattern中item是dd，即天为最小单位
          interval: 1
      # 正确的使用姿势：定期删除旧的日志（https://logging.apache.org/log4j/2.x/manual/appenders.html#RollingFileAppender）
      DefaultRolloverStrategy:
      # 最大保留文件数
      #  max: 3
        # 删除 age 所代表的之前的日志（如3分钟）
        Delete:
          basePath: ${LOG_PATH}
          # 日志就在path下，所以deep为1
          maxDeepth: 1
          IfFileName:
            - glob: farm-*.log
          IfLastModified:
            # - age: 90d
            - age: 3m

    # 异常日志
    - name: ERROR_FILE
      fileName: ${LOG_ERROR_PATH}/error.log
      filePattern: "${LOG_ERROR_PATH}/error-%d{yyyy-MM-dd}-%i.log"
      PatternLayout:
        pattern: ${LOG.PATTERN}
      Policies:
        # 按文件大小保存
        SizeBasedTriggeringPolicy:
          size: "50 MB"
      # 控制某时间段内文件的数目，如果没有控制好，之前的日志塞满后，后面的不会增加（建议不使用）
      DefaultRolloverStrategy:
        # 文件最多10
        max: 10

    # 线程池日志
    - name: EXECUTOR_THREAD_FILE
      fileName: ${LOG_ERROR_PATH}/thread.log
      filePattern: "${LOG_ERROR_PATH}/thread-%d{yyyy-MM-dd}-%i.log"
      PatternLayout:
        pattern: ${LOG.PATTERN}
      Policies:
        # 按文件大小保存
        SizeBasedTriggeringPolicy:
          size: "50 MB"
#        DefaultRolloverStrategy:
#          max: 10

    # 方法耗时日志
    - name: METHOD_CONSUME_FILE
      fileName: ${LOG_ERROR_PATH}/method-consume.log
      filePattern: "${LOG_ERROR_PATH}/method-consume-%d{yyyy-MM-dd}-%i.log"
      PatternLayout:
        pattern: ${LOG.PATTERN}
      Policies:
        # 按文件大小保存
        SizeBasedTriggeringPolicy:
          size: "50 MB"
#        DefaultRolloverStrategy:
#          max: 10

  # 路由器（指定日志流向哪个管道，并控制级别）
  Loggers:
    Root:
      level: ${LOG.LEVEL.CONSOLE}
      AppenderRef:
      - ref: CONSOLE
      - ref: ROLLING_FILE
        level: info
      - ref: ERROR_FILE
        level: error
    Logger:
    # 对应Appender中的线程日志和方法耗时日志
    - name: Executor
      level: info
      AppenderRef:
      - ref: EXECUTOR_THREAD_FILE
    - name: Method-consume
      level: info
      AppenderRef:
      - ref: METHOD_CONSUME_FILE